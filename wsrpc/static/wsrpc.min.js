(function(g){g.WSRPC=function(p,q){function r(c){setTimeout(function(){try{a.socket=k(),a.serial=1}catch(b){c("onerror",b),delete a.socket,d(b)}},q||1E3)}function k(c){function b(c,l){for(;0<a.oneTimeEventStore[c].length;){var b=a.oneTimeEventStore[c].shift();b.hasOwnProperty("resolve")&&b.promise.isPending()&&b.resolve()}for(var f in a.eventStore[c]){b=a.eventStore[c][f];try{b(l)}catch(e){e.hasOwnProperty("stack")?d(e.stack):d("Event function "+b+" raised unknown error: "+e)}}}var f=new WebSocket(p),
e=function(){for(a.connectionNumber++;0<a.callQueue.length;){var c=a.callQueue.shift(),b=a.store[c.serial];delete a.store[c.serial];b&&b.promise.isPending()&&b.reject("WebSocket error occurred")}};f.onclose=function(t){d("WSRPC: ONCLOSE CALLED (STATE: "+a["public"].state()+")");m(t);for(var l in a.store)a.store[l].hasOwnProperty("reject")&&a.store[l].promise.isPending()&&a.store[l].reject("Connection closed");e();b("onclose",c);b("onchange",c);r(b)};f.onerror=function(c){d("WSRPC: ONERROR CALLED (STATE: "+
a["public"].state()+")");m(c);e();b("onerror",c);b("onchange",c);d(["WebSocket has been closed by error: ",c])};f.onopen=function(c){d("WSRPC: ONOPEN CALLED (STATE: "+a["public"].state()+")");for(m(c);0<a.callQueue.length;)a.socket.send(JSON.stringify(a.callQueue.shift(),0,1));b("onconnect",c);b("onchange",c)};f.onmessage=function(c){d("WSRPC: ONMESSAGE CALLED ("+a["public"].state()+")");m(c);var b=null;if("message"==c.type)try{if(b=JSON.parse(c.data),d(b.data),b.hasOwnProperty("type")&&"call"===
b.type){var e=function(b,c){out={serial:b,type:"callback",data:c};a.socket.send(JSON.stringify(out))};if(!a.routes.hasOwnProperty(b.call))throw Error("Route not found");var f=a.routes[b.call](b.arguments);if("then"in f){var g=a.connectionNumber;f.then(function(c){g!==a.connectionNumber?d("Got callback for closed connection"):e(b.serial,c)})}else e(b.serial,f)}else if(b.hasOwnProperty("type")&&"error"===b.type){if(!a.store.hasOwnProperty(b.serial))return d("Unknown callback");var h=a.store[b.serial];
if("undefined"===typeof h)return d("Confirmation without handler");delete a.store[b.serial];d("REJECTING: "+b.data);h.reject(b.data)}else{h=a.store[b.serial];if("undefined"===typeof h)return d("Confirmation without handler");delete a.store[b.serial];return"callback"===b.type?h.resolve(b.data):h.reject(b.data)}}catch(k){a.socket.send(JSON.stringify({data:k.message,type:"error",serial:b?b.serial:null})),d(k.stack)}};return f}var a=this;a.serial=1;a.eventId=0;a.socketStarted=!1;a.eventStore={onconnect:{},
onerror:{},onclose:{},onchange:{}};a.connectionNumber=0;a.oneTimeEventStore={onconnect:[],onerror:[],onclose:[],onchange:[]};a.callQueue=[];var d=function(a){g.WSRPC.DEBUG&&("group"in console&&"groupEnd"in console?(console.group("WSRPC.DEBUG"),console.debug(a),console.groupEnd()):console.debug(a))},m=function(a){g.WSRPC.TRACE&&("group"in console&&"groupEnd"in console&&"dir"in console?(console.group("WSRPC.TRACE"),"data"in a?console.dir(JSON.parse(a.data)):console.dir(a),console.groupEnd()):"data"in
a?console.log("OBJECT DUMP: "+a.data):console.log("OBJECT DUMP: "+a))},n={0:"CONNECTING",1:"OPEN",2:"CLOSING",3:"CLOSED"};a.routes={};a.store={};a["public"]={call:function(c,b,f){a.serial+=2;var e=Q.defer();c={serial:a.serial,call:c,arguments:b};b=a["public"].state();"OPEN"===b?(a.store[a.serial]=e,a.socket.send(JSON.stringify(c))):"CONNECTING"===b?(d("SOCKET IS: "+b),a.store[a.serial]=e,a.callQueue.push(c)):(d("SOCKET IS: "+b),f&&f.noWait?e.reject("Socket is: "+b):(a.store[a.serial]=e,a.callQueue.push(c)));
return e.promise},init:function(){d("Websocket initializing..")},addRoute:function(c,b){a.routes[c]=b},addEventListener:function(c,b){return a.eventStore[c][a.eventId++]=b},onEvent:function(c){var b=Q.defer();a.oneTimeEventStore[c].push(b);return b.promise},removeEventListener:function(c,b){return b<a.eventStore[c].length?(a.eventStore[c].splice(b,1),!0):!1},deleteRoute:function(c){return delete a.routes[c]},destroy:function(){function c(){}a.socket.onclose=c;a.socket.onerror=c;return a.socket.close()},
state:function(){return a.socketStarted&&a.socket?n[a.socket.readyState]:n[3]},connect:function(){a.socketStarted=!0;a.socket=k()}};a["public"].addRoute("log",function(a){console.info("Websocket sent: "+a)});a["public"].addRoute("ping",function(a){return a});return a["public"]};g.WSRPC.DEBUG=!1;g.WSRPC.TRACE=!1})(this);